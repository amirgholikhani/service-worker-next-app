define(["exports"],function(t){"use strict";try{self["workbox:core:7.2.0"]&&_()}catch(t){}const e=(t,...e)=>{let s=t;return e.length>0&&(s+=` :: ${JSON.stringify(e)}`),s};class s extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:7.2.0"]&&_()}catch(t){}const n=t=>t&&"object"==typeof t?t:{handle:t};class i{constructor(t,e,s="GET"){this.handler=n(e),this.match=t,this.method=s}setCatchHandler(t){this.catchHandler=n(t)}}class r extends i{constructor(t,e,s){super(({url:e})=>{const s=t.exec(e.href);if(s&&(e.origin===location.origin||0===s.index))return s.slice(1)},e,s)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)})}addCacheListener(){self.addEventListener("message",t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,s=Promise.all(e.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const s=new Request(...e);return this.handleRequest({request:s,event:t})}));t.waitUntil(s),t.ports&&t.ports[0]&&s.then(()=>t.ports[0].postMessage(!0))}})}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:i,route:r}=this.findMatchingRoute({event:e,request:t,sameOrigin:n,url:s});let a=r&&r.handler;const o=t.method;if(!a&&this.i.has(o)&&(a=this.i.get(o)),!a)return;let c;try{c=a.handle({url:s,request:t,event:e,params:i})}catch(t){c=Promise.reject(t)}const h=r&&r.catchHandler;return c instanceof Promise&&(this.o||h)&&(c=c.catch(async n=>{if(h)try{return await h.handle({url:s,request:t,event:e,params:i})}catch(t){t instanceof Error&&(n=t)}if(this.o)return this.o.handle({url:s,request:t,event:e});throw n})),c}findMatchingRoute({url:t,sameOrigin:e,request:s,event:n}){const i=this.t.get(s.method)||[];for(const r of i){let i;const a=r.match({url:t,sameOrigin:e,request:s,event:n});if(a)return i=a,(Array.isArray(i)&&0===i.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(i=void 0),{route:r,params:i}}return{}}setDefaultHandler(t,e="GET"){this.i.set(e,n(t))}setCatchHandler(t){this.o=n(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new s("unregister-route-but-not-found-with-method",{method:t.method});const e=this.t.get(t.method).indexOf(t);if(!(e>-1))throw new s("unregister-route-route-not-registered");this.t.get(t.method).splice(e,1)}}let o;const c=()=>(o||(o=new a,o.addFetchListener(),o.addCacheListener()),o);function h(){return h=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)({}).hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},h.apply(null,arguments)}let u,l;const f=new WeakMap,w=new WeakMap,d=new WeakMap,y=new WeakMap,p=new WeakMap;let m={get(t,e,s){if(t instanceof IDBTransaction){if("done"===e)return w.get(t);if("objectStoreNames"===e)return t.objectStoreNames||d.get(t);if("store"===e)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return b(t[e])},set:(t,e,s)=>(t[e]=s,!0),has:(t,e)=>t instanceof IDBTransaction&&("done"===e||"store"===e)||e in t};function g(t){return t!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(l||(l=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(v(this),e),b(f.get(this))}:function(...e){return b(t.apply(v(this),e))}:function(e,...s){const n=t.call(v(this),e,...s);return d.set(n,e.sort?e.sort():[e]),b(n)}}function q(t){return"function"==typeof t?g(t):(t instanceof IDBTransaction&&function(t){if(w.has(t))return;const e=new Promise((e,s)=>{const n=()=>{t.removeEventListener("complete",i),t.removeEventListener("error",r),t.removeEventListener("abort",r)},i=()=>{e(),n()},r=()=>{s(t.error||new DOMException("AbortError","AbortError")),n()};t.addEventListener("complete",i),t.addEventListener("error",r),t.addEventListener("abort",r)});w.set(t,e)}(t),e=t,(u||(u=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some(t=>e instanceof t)?new Proxy(t,m):t);var e}function b(t){if(t instanceof IDBRequest)return function(t){const e=new Promise((e,s)=>{const n=()=>{t.removeEventListener("success",i),t.removeEventListener("error",r)},i=()=>{e(b(t.result)),n()},r=()=>{s(t.error),n()};t.addEventListener("success",i),t.addEventListener("error",r)});return e.then(e=>{e instanceof IDBCursor&&f.set(e,t)}).catch(()=>{}),p.set(e,t),e}(t);if(y.has(t))return y.get(t);const e=q(t);return e!==t&&(y.set(t,e),p.set(e,t)),e}const v=t=>p.get(t);function D(t,e,{blocked:s,upgrade:n,blocking:i,terminated:r}={}){const a=indexedDB.open(t,e),o=b(a);return n&&a.addEventListener("upgradeneeded",t=>{n(b(a.result),t.oldVersion,t.newVersion,b(a.transaction),t)}),s&&a.addEventListener("blocked",t=>s(t.oldVersion,t.newVersion,t)),o.then(t=>{r&&t.addEventListener("close",()=>r()),i&&t.addEventListener("versionchange",t=>i(t.oldVersion,t.newVersion,t))}).catch(()=>{}),o}const E=["get","getKey","getAll","getAllKeys","count"],R=["put","add","delete","clear"],x=new Map;function I(t,e){if(!(t instanceof IDBDatabase)||e in t||"string"!=typeof e)return;if(x.get(e))return x.get(e);const s=e.replace(/FromIndex$/,""),n=e!==s,i=R.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!i&&!E.includes(s))return;const r=async function(t,...e){const r=this.transaction(t,i?"readwrite":"readonly");let a=r.store;return n&&(a=a.index(e.shift())),(await Promise.all([a[s](...e),i&&r.done]))[0]};return x.set(e,r),r}m=(t=>h({},t,{get:(e,s,n)=>I(e,s)||t.get(e,s,n),has:(e,s)=>!!I(e,s)||t.has(e,s)}))(m);try{self["workbox:background-sync:7.2.0"]&&_()}catch(t){}const B="requests",k="queueName";class N{constructor(){this.h=null}async addEntry(t){const e=(await this.getDb()).transaction(B,"readwrite",{durability:"relaxed"});await e.store.add(t),await e.done}async getFirstEntryId(){const t=await this.getDb(),e=await t.transaction(B).store.openCursor();return null==e?void 0:e.value.id}async getAllEntriesByQueueName(t){const e=await this.getDb(),s=await e.getAllFromIndex(B,k,IDBKeyRange.only(t));return s||new Array}async getEntryCountByQueueName(t){return(await this.getDb()).countFromIndex(B,k,IDBKeyRange.only(t))}async deleteEntry(t){const e=await this.getDb();await e.delete(B,t)}async getFirstEntryByQueueName(t){return await this.getEndEntryFromIndex(IDBKeyRange.only(t),"next")}async getLastEntryByQueueName(t){return await this.getEndEntryFromIndex(IDBKeyRange.only(t),"prev")}async getEndEntryFromIndex(t,e){const s=await this.getDb(),n=await s.transaction(B).store.index(k).openCursor(t,e);return null==n?void 0:n.value}async getDb(){return this.h||(this.h=await D("workbox-background-sync",3,{upgrade:this.u})),this.h}u(t,e){e>0&&e<3&&t.objectStoreNames.contains(B)&&t.deleteObjectStore(B);t.createObjectStore(B,{autoIncrement:!0,keyPath:"id"}).createIndex(k,k,{unique:!1})}}class O{constructor(t){this.l=t,this.p=new N}async pushEntry(t){delete t.id,t.queueName=this.l,await this.p.addEntry(t)}async unshiftEntry(t){const e=await this.p.getFirstEntryId();e?t.id=e-1:delete t.id,t.queueName=this.l,await this.p.addEntry(t)}async popEntry(){return this.m(await this.p.getLastEntryByQueueName(this.l))}async shiftEntry(){return this.m(await this.p.getFirstEntryByQueueName(this.l))}async getAll(){return await this.p.getAllEntriesByQueueName(this.l)}async size(){return await this.p.getEntryCountByQueueName(this.l)}async deleteEntry(t){await this.p.deleteEntry(t)}async m(t){return t&&await this.deleteEntry(t.id),t}}const C=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class j{static async fromRequest(t){const e={url:t.url,headers:{}};"GET"!==t.method&&(e.body=await t.clone().arrayBuffer());for(const[s,n]of t.headers.entries())e.headers[s]=n;for(const s of C)void 0!==t[s]&&(e[s]=t[s]);return new j(e)}constructor(t){"navigate"===t.mode&&(t.mode="same-origin"),this.q=t}toObject(){const t=Object.assign({},this.q);return t.headers=Object.assign({},this.q.headers),t.body&&(t.body=t.body.slice(0)),t}toRequest(){return new Request(this.q.url,this.q)}clone(){return new j(this.toObject())}}const P="workbox-background-sync",T=new Set,S=t=>{const e={request:new j(t.requestData).toRequest(),timestamp:t.timestamp};return t.metadata&&(e.metadata=t.metadata),e};class A{constructor(t,{forceSyncFallback:e,onSync:n,maxRetentionTime:i}={}){if(this.v=!1,this.D=!1,T.has(t))throw new s("duplicate-queue-name",{name:t});T.add(t),this.R=t,this.I=n||this.replayRequests,this.B=i||10080,this._=Boolean(e),this.k=new O(this.R),this.N()}get name(){return this.R}async pushRequest(t){await this.O(t,"push")}async unshiftRequest(t){await this.O(t,"unshift")}async popRequest(){return this.C("pop")}async shiftRequest(){return this.C("shift")}async getAll(){const t=await this.k.getAll(),e=Date.now(),s=[];for(const n of t){const t=60*this.B*1e3;e-n.timestamp>t?await this.k.deleteEntry(n.id):s.push(S(n))}return s}async size(){return await this.k.size()}async O({request:t,metadata:e,timestamp:s=Date.now()},n){const i={requestData:(await j.fromRequest(t.clone())).toObject(),timestamp:s};switch(e&&(i.metadata=e),n){case"push":await this.k.pushEntry(i);break;case"unshift":await this.k.unshiftEntry(i)}this.v?this.D=!0:await this.registerSync()}async C(t){const e=Date.now();let s;switch(t){case"pop":s=await this.k.popEntry();break;case"shift":s=await this.k.shiftEntry()}if(s){const n=60*this.B*1e3;return e-s.timestamp>n?this.C(t):S(s)}}async replayRequests(){let t;for(;t=await this.shiftRequest();)try{await fetch(t.request.clone())}catch(e){throw await this.unshiftRequest(t),new s("queue-replay-failed",{name:this.R})}}async registerSync(){if("sync"in self.registration&&!this._)try{await self.registration.sync.register(`${P}:${this.R}`)}catch(t){}}N(){"sync"in self.registration&&!this._?self.addEventListener("sync",t=>{if(t.tag===`${P}:${this.R}`){const e=async()=>{let e;this.v=!0;try{await this.I({queue:this})}catch(t){if(t instanceof Error)throw e=t,e}finally{!this.D||e&&!t.lastChance||await this.registerSync(),this.v=!1,this.D=!1}};t.waitUntil(e())}}):this.I({queue:this})}static get j(){return T}}function M(t){return new Promise(e=>setTimeout(e,t))}const U={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},W=t=>[U.prefix,t,U.suffix].filter(t=>t&&t.length>0).join("-"),F=t=>t||W(U.runtime);function L(t,e){const s=new URL(t);for(const t of e)s.searchParams.delete(t);return s.href}class ${constructor(){this.promise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}}const K=new Set;try{self["workbox:strategies:7.2.0"]&&_()}catch(t){}function H(t){return"string"==typeof t?new Request(t):t}class Q{constructor(t,e){this.P={},Object.assign(this,e),this.event=e.event,this.T=t,this.S=new $,this.A=[],this.M=[...t.plugins],this.U=new Map;for(const t of this.M)this.U.set(t,{});this.event.waitUntil(this.S.promise)}async fetch(t){const{event:e}=this;let n=H(t);if("navigate"===n.mode&&e instanceof FetchEvent&&e.preloadResponse){const t=await e.preloadResponse;if(t)return t}const i=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))n=await t({request:n.clone(),event:e})}catch(t){if(t instanceof Error)throw new s("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const r=n.clone();try{let t;t=await fetch(n,"navigate"===n.mode?void 0:this.T.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))t=await s({event:e,request:r,response:t});return t}catch(t){throw i&&await this.runCallbacks("fetchDidFail",{error:t,event:e,originalRequest:i.clone(),request:r.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),s=e.clone();return this.waitUntil(this.cachePut(t,s)),e}async cacheMatch(t){const e=H(t);let s;const{cacheName:n,matchOptions:i}=this.T,r=await this.getCacheKey(e,"read"),a=Object.assign(Object.assign({},i),{cacheName:n});s=await caches.match(r,a);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await t({cacheName:n,matchOptions:i,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(t,e){const n=H(t);await M(0);const i=await this.getCacheKey(n,"write");if(!e)throw new s("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const a=await this.W(e);if(!a)return!1;const{cacheName:o,matchOptions:c}=this.T,h=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),l=u?await async function(t,e,s,n){const i=L(e.url,s);if(e.url===i)return t.match(e,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),a=await t.keys(e,r);for(const e of a)if(i===L(e.url,s))return t.match(e,n)}(h,i.clone(),["__WB_REVISION__"],c):null;try{await h.put(i,u?a.clone():a)}catch(t){if(t instanceof Error)throw"QuotaExceededError"===t.name&&await async function(){for(const t of K)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:o,oldResponse:l,newResponse:a.clone(),request:i,event:this.event});return!0}async getCacheKey(t,e){const s=`${t.url} | ${e}`;if(!this.P[s]){let n=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))n=H(await t({mode:e,request:n,event:this.event,params:this.params}));this.P[s]=n}return this.P[s]}hasCallback(t){for(const e of this.T.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const s of this.iterateCallbacks(t))await s(e)}*iterateCallbacks(t){for(const e of this.T.plugins)if("function"==typeof e[t]){const s=this.U.get(e),n=n=>{const i=Object.assign(Object.assign({},n),{state:s});return e[t](i)};yield n}}waitUntil(t){return this.A.push(t),t}async doneWaiting(){let t;for(;t=this.A.shift();)await t}destroy(){this.S.resolve(null)}async W(t){let e=t,s=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,s=!0,!e)break;return s||e&&200!==e.status&&(e=void 0),e}}class G{constructor(t={}){this.cacheName=F(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,s="string"==typeof t.request?new Request(t.request):t.request,n="params"in t?t.params:void 0,i=new Q(this,{event:e,request:s,params:n}),r=this.F(i,s,e);return[r,this.L(r,i,s,e)]}async F(t,e,n){let i;await t.runCallbacks("handlerWillStart",{event:n,request:e});try{if(i=await this.$(e,t),!i||"error"===i.type)throw new s("no-response",{url:e.url})}catch(s){if(s instanceof Error)for(const r of t.iterateCallbacks("handlerDidError"))if(i=await r({error:s,event:n,request:e}),i)break;if(!i)throw s}for(const s of t.iterateCallbacks("handlerWillRespond"))i=await s({event:n,request:e,response:i});return i}async L(t,e,s,n){let i,r;try{i=await t}catch(r){}try{await e.runCallbacks("handlerDidRespond",{event:n,request:s,response:i}),await e.doneWaiting()}catch(t){t instanceof Error&&(r=t)}if(await e.runCallbacks("handlerDidComplete",{event:n,request:s,response:i,error:r}),e.destroy(),r)throw r}}function z(t){t.then(()=>{})}try{self["workbox:expiration:7.2.0"]&&_()}catch(t){}const J="cache-entries",V=t=>{const e=new URL(t,location.href);return e.hash="",e.href};class X{constructor(t){this.h=null,this.K=t}u(t){const e=t.createObjectStore(J,{keyPath:"id"});e.createIndex("cacheName","cacheName",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}H(t){this.u(t),this.K&&function(t,{blocked:e}={}){const s=indexedDB.deleteDatabase(t);e&&s.addEventListener("blocked",t=>e(t.oldVersion,t)),b(s).then(()=>{})}(this.K)}async setTimestamp(t,e){const s={url:t=V(t),timestamp:e,cacheName:this.K,id:this.G(t)},n=(await this.getDb()).transaction(J,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(t){const e=await this.getDb(),s=await e.get(J,this.G(t));return null==s?void 0:s.timestamp}async expireEntries(t,e){const s=await this.getDb();let n=await s.transaction(J).store.index("timestamp").openCursor(null,"prev");const i=[];let r=0;for(;n;){const s=n.value;s.cacheName===this.K&&(t&&s.timestamp<t||e&&r>=e?i.push(n.value):r++),n=await n.continue()}const a=[];for(const t of i)await s.delete(J,t.id),a.push(t.url);return a}G(t){return this.K+"|"+V(t)}async getDb(){return this.h||(this.h=await D("workbox-expiration",1,{upgrade:this.H.bind(this)})),this.h}}class Y{constructor(t,e={}){this.J=!1,this.V=!1,this.X=e.maxEntries,this.Y=e.maxAgeSeconds,this.Z=e.matchOptions,this.K=t,this.tt=new X(t)}async expireEntries(){if(this.J)return void(this.V=!0);this.J=!0;const t=this.Y?Date.now()-1e3*this.Y:0,e=await this.tt.expireEntries(t,this.X),s=await self.caches.open(this.K);for(const t of e)await s.delete(t,this.Z);this.J=!1,this.V&&(this.V=!1,z(this.expireEntries()))}async updateTimestamp(t){await this.tt.setTimestamp(t,Date.now())}async isURLExpired(t){if(this.Y){const e=await this.tt.getTimestamp(t),s=Date.now()-1e3*this.Y;return void 0===e||e<s}return!1}async delete(){this.V=!1,await this.tt.expireEntries(1/0)}}const Z={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null};t.BackgroundSyncPlugin=class{constructor(t,e){this.fetchDidFail=async({request:t})=>{await this.et.pushRequest({request:t})},this.et=new A(t,e)}},t.CacheFirst=class extends G{async $(t,e){let n,i=await e.cacheMatch(t);if(!i)try{i=await e.fetchAndCachePut(t)}catch(t){t instanceof Error&&(n=t)}if(!i)throw new s("no-response",{url:t.url,error:n});return i}},t.ExpirationPlugin=class{constructor(t={}){this.cachedResponseWillBeUsed=async({event:t,request:e,cacheName:s,cachedResponse:n})=>{if(!n)return null;const i=this.st(n),r=this.nt(s);z(r.expireEntries());const a=r.updateTimestamp(e.url);if(t)try{t.waitUntil(a)}catch(t){}return i?n:null},this.cacheDidUpdate=async({cacheName:t,request:e})=>{const s=this.nt(t);await s.updateTimestamp(e.url),await s.expireEntries()},this.it=t,this.Y=t.maxAgeSeconds,this.rt=new Map,t.purgeOnQuotaError&&function(t){K.add(t)}(()=>this.deleteCacheAndMetadata())}nt(t){if(t===F())throw new s("expire-custom-caches-only");let e=this.rt.get(t);return e||(e=new Y(t,this.it),this.rt.set(t,e)),e}st(t){if(!this.Y)return!0;const e=this.ot(t);if(null===e)return!0;return e>=Date.now()-1e3*this.Y}ot(t){if(!t.headers.has("date"))return null;const e=t.headers.get("date"),s=new Date(e).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[t,e]of this.rt)await self.caches.delete(t),await e.delete();this.rt=new Map}},t.NetworkFirst=class extends G{constructor(t={}){super(t),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Z),this.ct=t.networkTimeoutSeconds||0}async $(t,e){const n=[],i=[];let r;if(this.ct){const{id:s,promise:a}=this.ht({request:t,logs:n,handler:e});r=s,i.push(a)}const a=this.ut({timeoutId:r,request:t,logs:n,handler:e});i.push(a);const o=await e.waitUntil((async()=>await e.waitUntil(Promise.race(i))||await a)());if(!o)throw new s("no-response",{url:t.url});return o}ht({request:t,logs:e,handler:s}){let n;return{promise:new Promise(e=>{n=setTimeout(async()=>{e(await s.cacheMatch(t))},1e3*this.ct)}),id:n}}async ut({timeoutId:t,request:e,logs:s,handler:n}){let i,r;try{r=await n.fetchAndCachePut(e)}catch(t){t instanceof Error&&(i=t)}return t&&clearTimeout(t),!i&&r||(r=await n.cacheMatch(e)),r}},t.NetworkOnly=class extends G{constructor(t={}){super(t),this.ct=t.networkTimeoutSeconds||0}async $(t,e){let n,i;try{const s=[e.fetch(t)];if(this.ct){const t=M(1e3*this.ct);s.push(t)}if(i=await Promise.race(s),!i)throw new Error(`Timed out the network response after ${this.ct} seconds.`)}catch(t){t instanceof Error&&(n=t)}if(!i)throw new s("no-response",{url:t.url,error:n});return i}},t.StaleWhileRevalidate=class extends G{constructor(t={}){super(t),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Z)}async $(t,e){const n=e.fetchAndCachePut(t).catch(()=>{});e.waitUntil(n);let i,r=await e.cacheMatch(t);if(r);else try{r=await n}catch(t){t instanceof Error&&(i=t)}if(!r)throw new s("no-response",{url:t.url,error:i});return r}},t.clientsClaim=function(){self.addEventListener("activate",()=>self.clients.claim())},t.registerRoute=function(t,e,n){let a;if("string"==typeof t){const s=new URL(t,location.href);a=new i(({url:t})=>t.href===s.href,e,n)}else if(t instanceof RegExp)a=new r(t,e,n);else if("function"==typeof t)a=new i(t,e,n);else{if(!(t instanceof i))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=t}return c().registerRoute(a),a}});
//# sourceMappingURL=workbox-24f9f951.js.map
